diff --git a/firmware/er_vfp_microchip_harmony.X/nbproject/configurations.xml b/firmware/er_vfp_microchip_harmony.X/nbproject/configurations.xml
index 6f7041f..3350915 100644
--- a/firmware/er_vfp_microchip_harmony.X/nbproject/configurations.xml
+++ b/firmware/er_vfp_microchip_harmony.X/nbproject/configurations.xml
@@ -27,7 +27,6 @@
         <itemPath>../src/app.h</itemPath>
         <itemPath>../src/display_ctrl.h</itemPath>
         <itemPath>../src/sensor.h</itemPath>
-        <itemPath>../src/switch_control.h</itemPath>
       </logicalFolder>
       <logicalFolder name="f3" displayName="bsp" projectFiles="true">
         <logicalFolder name="f1" displayName="pic32mz_ef_sk" projectFiles="true">
@@ -276,7 +275,8 @@
         </logicalFolder>
         <itemPath>../src/app.c</itemPath>
         <itemPath>../src/main.c</itemPath>
-        <itemPath>../src/switch_control.c</itemPath>
+        <itemPath>../src/display_ctrl.c</itemPath>
+        <itemPath>../src/sensor.c</itemPath>
       </logicalFolder>
       <logicalFolder name="f3" displayName="bsp" projectFiles="true">
         <logicalFolder name="f1" displayName="pic32mz_ef_sk" projectFiles="true">
@@ -286,9 +286,13 @@
       <logicalFolder name="er_plat_microchip_pic32mzecsk"
                      displayName="er_plat_microchip_pic32mzecsk"
                      projectFiles="true">
+        <logicalFolder name="display" displayName="display" projectFiles="true">
+          <itemPath>../../er_plat_microchip_pic32mzecsk/display/OLED_B_SPI.c</itemPath>
+        </logicalFolder>
         <itemPath>../../er_plat_microchip_pic32mzecsk/platform_nvm.c</itemPath>
         <itemPath>../../er_plat_microchip_pic32mzecsk/platform_demo.c</itemPath>
         <itemPath>../../er_plat_microchip_pic32mzecsk/platform_freertos.c</itemPath>
+        <itemPath>../../er_plat_microchip_pic32mzecsk/platform_display.c</itemPath>
       </logicalFolder>
       <logicalFolder name="er_sdk" displayName="er_sdk" projectFiles="true">
         <logicalFolder name="include" displayName="include" projectFiles="true">
@@ -962,7 +966,7 @@
         <property key="post-instruction-scheduling" value="default"/>
         <property key="pre-instruction-scheduling" value="default"/>
         <property key="preprocessor-macros"
-                  value="DEBUG_EASDK;COMPILE_TIME_DEBUG_LEVEL=DEBUG_DEBUG;CONFIG_NETWORK_STACK=cfg_harmony;CONFIG_OS=cfg_freertos;CONFIG_SECURITY=cfg_cyassl;CONFIG_HAS_CONFIGURATOR_SERVER=0;HAVE_CONFIG_H;NO_DISPLAY"/>
+                  value="DEBUG_EASDK;COMPILE_TIME_DEBUG_LEVEL=DEBUG_DEBUG;CONFIG_NETWORK_STACK=cfg_harmony;CONFIG_OS=cfg_freertos;CONFIG_SECURITY=cfg_cyassl;CONFIG_HAS_CONFIGURATOR_SERVER=0;HAVE_CONFIG_H"/>
         <property key="strict-ansi" value="false"/>
         <property key="support-ansi" value="false"/>
         <property key="use-cci" value="false"/>
@@ -1065,7 +1069,6 @@
         <property key="ToolFirmwareFilePath"
                   value="Press to browse for a specific firmware version"/>
         <property key="ToolFirmwareOption.UseLatestFirmware" value="true"/>
-        <property key="firmware.download.all" value="false"/>
         <property key="memories.configurationmemory" value="true"/>
         <property key="memories.dataflash" value="true"/>
         <property key="memories.eeprom" value="true"/>
diff --git a/firmware/src/app.c b/firmware/src/app.c
index 7af5272..ad90f8f 100644
--- a/firmware/src/app.c
+++ b/firmware/src/app.c
@@ -109,7 +109,8 @@ static volatile unsigned char SDK_HEAP[65536];
 */
 static struct exosite_class *exo;
 
-int gCounter;
+extern int getTemperature(void);
+extern int getHumidity(void);
 
 /**
  *  This function is called when the read operation is finished.
@@ -121,19 +122,16 @@ int gCounter;
  */
 static void on_read(int status, const char *alias, const char *value)
 {
-    int val;
     SYS_CONSOLE_PRINT("Read \"%s\": %s\r\n", alias, (status == ERR_SUCCESS) ? value : "failed");
-    
-    if(!strcmp("leds", alias)) {
-        val = atoi(value);
-        BSP_LEDStateSet(BSP_LED_1, (val & 1) ? BSP_LED_STATE_ON : BSP_LED_STATE_OFF);
-        BSP_LEDStateSet(BSP_LED_2, (val & 2) ? BSP_LED_STATE_ON : BSP_LED_STATE_OFF);
-        BSP_LEDStateSet(BSP_LED_3, (val & 4) ? BSP_LED_STATE_ON : BSP_LED_STATE_OFF);
-        appData.leds_initialized = (status == ERR_SUCCESS) ? INITIALIZED : NOT_INITIALIZED;
-    }
-    if(!strcmp("count", alias)) {
-        gCounter = atoi(value);
-        appData.counter_initialized = (status == ERR_SUCCESS) ? INITIALIZED : NOT_INITIALIZED;
+
+    if (status == ERR_SUCCESS) {
+        if(!strcmp("display", alias)) {
+            display_print_remote_msg(value);
+            appData.remote_msg_initialized = INITIALIZED;
+        }
+    } else {
+        /* In case of error, the reading will be repeated */
+        appData.remote_msg_initialized = NOT_INITIALIZED;
     }
 }
 
@@ -160,15 +158,12 @@ static void on_write(int status, const char *alias)
  */
 static void on_change(int status, const char *alias, const char *value)
 {
-    int val = atoi(value);
-    ASSERT(!strcmp("leds", alias));
+    ASSERT(!strcmp("display", alias));
     
     if (status == ERR_SUCCESS) {
-        appData.leds_initialized = INITIALIZED;
+        appData.remote_msg_initialized = INITIALIZED;
         printf("Value changed on server \"%s\" to %s\n", alias, value);
-        BSP_LEDStateSet(BSP_LED_1, (val & 1) ? BSP_LED_STATE_ON : BSP_LED_STATE_OFF);
-        BSP_LEDStateSet(BSP_LED_2, (val & 2) ? BSP_LED_STATE_ON : BSP_LED_STATE_OFF);
-        BSP_LEDStateSet(BSP_LED_3, (val & 4) ? BSP_LED_STATE_ON : BSP_LED_STATE_OFF);
+        display_print_remote_msg(value);
     }
 }
 
@@ -190,8 +185,7 @@ void APP_Initialize ( void )
 {
     int error;
     appData.state = APP_STATE_INIT;
-    appData.leds_initialized = NOT_INITIALIZED;
-    appData.counter_initialized = NOT_INITIALIZED;
+    appData.remote_msg_initialized = NOT_INITIALIZED;
     
     /** Platform initialization */
     error = platform_init();
@@ -224,11 +218,12 @@ void APP_Tasks ( void )
     TCPIP_MAC_ADDR*     pAdd;
     int                 i, nNets;
     char                str[32];
-    int                 countDiff;
+    int                 sensor_val;
+
     enum exosite_device_status status;
     int error;
-    char *vendor = "ta7lsaumvswz5mi";
-    char *model = "ta7lsaumvswz5mi";
+    char *vendor = "opentether";
+    char *model = "bcmwcd4";
     char tmp[256];
         
     /* Check the application's current state. */
@@ -294,12 +289,27 @@ void APP_Tasks ( void )
                         SYS_CONSOLE_PRINT(" MAC Address: %x.%x.%x.%x.%x.%x \r\n",pAdd->v[0], pAdd->v[1], pAdd->v[2], pAdd->v[3], pAdd->v[4], pAdd->v[5]);
                         SYS_CONSOLE_PRINT(" IP Address:  %d.%d.%d.%d \r\n", ipAddr.v[0], ipAddr.v[1], ipAddr.v[2], ipAddr.v[3]);
                         SYS_CONSOLE_PRINT("---------------------------------------------\r\n");
-                        appData.state = APP_ER_SDK_INIT;
+                        appData.state = APP_DISPLAY_INIT;
                     }
                 }
             }
             break;
 
+        case APP_DISPLAY_INIT:
+
+            if(!is_display_ready())
+                break;
+
+            SYS_CONSOLE_MESSAGE(" Display initialized\r\n");
+
+            if (display_print_sn()!= ERR_SUCCESS) {
+                appData.state = APP_PLATFORM_ERROR;
+                break;
+            }
+
+            appData.state = APP_ER_SDK_INIT;
+            break;
+
         case APP_ER_SDK_INIT:
 
             SYS_CONSOLE_MESSAGE(" Start Exosite Ready SDK\r\n");
@@ -330,32 +340,31 @@ void APP_Tasks ( void )
 
         case APP_CREATE_SUBSCRIPTIONS:
 
-            if(exosite_subscribe(exo, "leds", 0, on_change) == ERR_SUCCESS) {
-                appData.leds_initialized = IN_PROGRESS;
-                exosite_read(exo, "leds", on_read);
+            if(exosite_subscribe(exo, "display", 0, on_change) == ERR_SUCCESS) {
+                appData.remote_msg_initialized = IN_PROGRESS;
+                exosite_read(exo, "display", on_read);
                 appData.state = APP_APPLICATION;
             }
             break;
 
         case APP_APPLICATION:
 
-            if (appData.leds_initialized == NOT_INITIALIZED) {
-                appData.leds_initialized = IN_PROGRESS;
-                exosite_read(exo, "leds", on_read);
-            }
-            if (appData.counter_initialized == NOT_INITIALIZED) {
-                appData.counter_initialized = IN_PROGRESS;
-                exosite_read(exo, "count", on_read);
+            if (appData.remote_msg_initialized == NOT_INITIALIZED) {
+                appData.remote_msg_initialized = IN_PROGRESS;
+                exosite_read(exo, "display", on_read);
             }
                     
-            /** Update "count" data source */
-            countDiff = get_and_clear_press_counter();
-            if((appData.counter_initialized == INITIALIZED) && countDiff) {
-                gCounter += countDiff;
-                sprintf(str, "%d", gCounter);
-                SYS_CONSOLE_PRINT("Counter: %s\r\n", str);
-                exosite_write(exo, "count", str, on_write);
-            }
+            /** Update "temperature" data source */
+            sensor_val = getTemperature();
+            sprintf(str, "%d.%01dC", (sensor_val/100),(sensor_val%100)/10);
+            SYS_CONSOLE_PRINT("Temperature: %s\r\n", str);
+            exosite_write(exo, "temperature", str, on_write);
+
+            /** Update "humidity" data source */
+            sensor_val = getHumidity();
+            sprintf(str, "%d", sensor_val);
+            SYS_CONSOLE_PRINT("Humidity: %s\r\n", str);
+            exosite_write(exo, "humidity", str, on_write);
 
             exosite_delay_and_poll(exo, 2000);
 
diff --git a/firmware/src/app.h b/firmware/src/app.h
index c7d0226..a86b49a 100644
--- a/firmware/src/app.h
+++ b/firmware/src/app.h
@@ -111,7 +111,7 @@ typedef struct
     /* The application's current state */
     APP_STATES state;
 
-    enum { NOT_INITIALIZED = 0, IN_PROGRESS, INITIALIZED } leds_initialized, counter_initialized;
+    enum { NOT_INITIALIZED = 0, IN_PROGRESS, INITIALIZED } remote_msg_initialized;
 
 } APP_DATA;
 
diff --git a/firmware/src/switch_control.c b/firmware/src/switch_control.c
deleted file mode 100644
index 0a31907..0000000
--- a/firmware/src/switch_control.c
+++ /dev/null
@@ -1,218 +0,0 @@
-/*******************************************************************************
-  MPLAB Harmony Application Source File
-  
-  Company:
-    Microchip Technology Inc.
-  
-  File Name:
-    switch_control.c
-
-  Summary:
-    This file contains the source code for the MPLAB Harmony application.
-
-  Description:
-    This file contains the source code for the MPLAB Harmony application.  It 
-    implements the logic of the application's state machine and it may call 
-    API routines of other MPLAB Harmony modules in the system, such as drivers,
-    system services, and middleware.  However, it does not call any of the
-    system interfaces (such as the "Initialize" and "Tasks" functions) of any of
-    the modules in the system or make any assumptions about when those functions
-    are called.  That is the responsibility of the configuration-specific system
-    files.
- *******************************************************************************/
-
-// DOM-IGNORE-BEGIN
-/*******************************************************************************
-Copyright (c) 2013-2014 released Microchip Technology Inc.  All rights reserved.
-
-Microchip licenses to you the right to use, modify, copy and distribute
-Software only when embedded on a Microchip microcontroller or digital signal
-controller that is integrated into your product or third party product
-(pursuant to the sublicense terms in the accompanying license agreement).
-
-You should refer to the license agreement accompanying this Software for
-additional information regarding your rights and obligations.
-
-SOFTWARE AND DOCUMENTATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
-EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
-MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
-IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
-CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
-OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
-INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
-CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
-SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
-(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
- *******************************************************************************/
-// DOM-IGNORE-END
-
-
-// *****************************************************************************
-// *****************************************************************************
-// Section: Included Files 
-// *****************************************************************************
-// *****************************************************************************
-
-#include "system_config.h"
-#include "system_definitions.h"
-#include <system_utils.h>
-#include <lib/type.h>
-#include <lib/error.h>
-#include <lib/debug.h>
-#include <exosite_api.h>
-#include "switch_control.h"
-
-// *****************************************************************************
-// *****************************************************************************
-// Section: Global Data Definitions
-// *****************************************************************************
-// *****************************************************************************
-
-// *****************************************************************************
-/* Application Data
-
-  Summary:
-    Holds application data
-
-  Description:
-    This structure holds the application's data.
-
-  Remarks:
-    This structure should be initialized by the APP_Initialize function.
-    
-    Application strings and buffers are be defined outside this structure.
-*/
-
-SWITCH_CONTROL_DATA switch_controlData;
-
-// *****************************************************************************
-// *****************************************************************************
-// Section: Application Callback Functions
-// *****************************************************************************
-// *****************************************************************************
-
-/* TODO:  Add any necessary callback functions.
-*/
-
-// *****************************************************************************
-// *****************************************************************************
-// Section: Application Local Functions
-// *****************************************************************************
-// *****************************************************************************
-
-
-/* TODO:  Add any necessary local functions.
-*/
-
-
-// *****************************************************************************
-// *****************************************************************************
-// Section: Application Initialization and State Machine Functions
-// *****************************************************************************
-// *****************************************************************************
-
-/*******************************************************************************
-  Function:
-    void SWITCH_CONTROL_Initialize ( void )
-
-  Remarks:
-    See prototype in switch_control.h.
- */
-
-void SWITCH_CONTROL_Initialize ( void )
-{
-    int32_t status;
-            
-    /* Place the App state machine in its initial state. */
-    switch_controlData.state = SWITCH_CONTROL_STATE_INIT;
-    switch_controlData.pressCounter = 0;
-    switch_controlData.swDownPressed = FALSE;
-    switch_controlData.swUpPressed = FALSE;
-    
-    status = system_mutex_create(&switch_controlData.lock_mutex);
-    if (status != ERR_SUCCESS) {
-        error_log(DEBUG_PLATFORM, ("Mutex can not be created\n"), status);
-    }
-}
-
-
-/******************************************************************************
-  Function:
-    void SWITCH_CONTROL_Tasks ( void )
-
-  Remarks:
-    See prototype in switch_control.h.
- */
-
-void SWITCH_CONTROL_Tasks ( void )
-{
-    BOOL swUp, swDown;
-    /* Check the application's current state. */
-    switch ( switch_controlData.state )
-    {
-        /* Application's initial state. */
-        case SWITCH_CONTROL_STATE_INIT:
-        {
-            bool appInitialized = true;
-       
-        
-            if (appInitialized)
-            {
-            
-                switch_controlData.state = SWITCH_CONTROL_STATE_SERVICE_TASKS;
-            }
-            break;
-        }
-
-        case SWITCH_CONTROL_STATE_SERVICE_TASKS:
-        {
-            swUp = !BSP_SwitchStateGet(BSP_SWITCH_1);
-            swDown = !BSP_SwitchStateGet(BSP_SWITCH_2);
-            
-            if(swUp != switch_controlData.swUpPressed) {
-                if(swUp) {
-                    system_mutex_lock(switch_controlData.lock_mutex);
-                    switch_controlData.pressCounter++;
-                    system_mutex_unlock(switch_controlData.lock_mutex);
-                }
-                SYS_CONSOLE_PRINT("Button up %s\r\n", swUp ? "Pressed" : "Released");
-                switch_controlData.swUpPressed = !switch_controlData.swUpPressed;
-            }
-            if(swDown != switch_controlData.swDownPressed) {
-                if(swDown) {
-                    system_mutex_lock(switch_controlData.lock_mutex);
-                    switch_controlData.pressCounter--;
-                    system_mutex_unlock(switch_controlData.lock_mutex);
-                }
-                SYS_CONSOLE_PRINT("Button down %s\r\n", swDown ? "Pressed" : "Released");
-                switch_controlData.swDownPressed = !switch_controlData.swDownPressed;
-            }
-            break;
-        }
-
-        /* TODO: implement your application state machine.*/
-        
-
-        /* The default state should never be executed. */
-        default:
-        {
-            /* TODO: Handle error in application's state machine. */
-            break;
-        }
-    }
-}
-
-int get_and_clear_press_counter(void) {
-    
-    int ret;
-    system_mutex_lock(switch_controlData.lock_mutex);
-    ret = switch_controlData.pressCounter;
-    switch_controlData.pressCounter = 0;
-    system_mutex_unlock(switch_controlData.lock_mutex);
-    
-    return ret;
-} 
-
-/*******************************************************************************
- End of File
- */
diff --git a/firmware/src/switch_control.h b/firmware/src/switch_control.h
deleted file mode 100644
index bc55b40..0000000
--- a/firmware/src/switch_control.h
+++ /dev/null
@@ -1,221 +0,0 @@
-/*******************************************************************************
-  MPLAB Harmony Application Header File
-
-  Company:
-    Microchip Technology Inc.
-
-  File Name:
-    switch_control.h
-
-  Summary:
-    This header file provides prototypes and definitions for the application.
-
-  Description:
-    This header file provides function prototypes and data type definitions for
-    the application.  Some of these are required by the system (such as the
-    "APP_Initialize" and "APP_Tasks" prototypes) and some of them are only used
-    internally by the application (such as the "APP_STATES" definition).  Both
-    are defined here for convenience.
-*******************************************************************************/
-
-//DOM-IGNORE-BEGIN
-/*******************************************************************************
-Copyright (c) 2013-2014 released Microchip Technology Inc.  All rights reserved.
-
-Microchip licenses to you the right to use, modify, copy and distribute
-Software only when embedded on a Microchip microcontroller or digital signal
-controller that is integrated into your product or third party product
-(pursuant to the sublicense terms in the accompanying license agreement).
-
-You should refer to the license agreement accompanying this Software for
-additional information regarding your rights and obligations.
-
-SOFTWARE AND DOCUMENTATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
-EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
-MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
-IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
-CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
-OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
-INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
-CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
-SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
-(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
- *******************************************************************************/
-//DOM-IGNORE-END
-
-#ifndef _SWITCH_CONTROL_H
-#define _SWITCH_CONTROL_H
-
-// *****************************************************************************
-// *****************************************************************************
-// Section: Included Files
-// *****************************************************************************
-// *****************************************************************************
-
-#include <stdint.h>
-#include <stdbool.h>
-#include <stddef.h>
-#include <stdlib.h>
-#include <lib/type.h>
-#include "system_config.h"
-#include "system_definitions.h"
-#include <porting/thread_port.h>
-
-// DOM-IGNORE-BEGIN
-#ifdef __cplusplus  // Provide C++ Compatibility
-
-extern "C" {
-
-#endif
-// DOM-IGNORE-END 
-
-// *****************************************************************************
-// *****************************************************************************
-// Section: Type Definitions
-// *****************************************************************************
-// *****************************************************************************
-
-// *****************************************************************************
-/* Application states
-
-  Summary:
-    Application states enumeration
-
-  Description:
-    This enumeration defines the valid application states.  These states
-    determine the behavior of the application at various times.
-*/
-
-typedef enum
-{
-	/* Application's state machine's initial state. */
-	SWITCH_CONTROL_STATE_INIT=0,
-	SWITCH_CONTROL_STATE_SERVICE_TASKS,
-
-	/* TODO: Define states used by the application state machine. */
-
-} SWITCH_CONTROL_STATES;
-
-
-// *****************************************************************************
-/* Application Data
-
-  Summary:
-    Holds application data
-
-  Description:
-    This structure holds the application's data.
-
-  Remarks:
-    Application strings and buffers are be defined outside this structure.
- */
-
-typedef struct
-{
-    /* The application's current state */
-    SWITCH_CONTROL_STATES state;
-
-    /* TODO: Define any additional data used by the application. */
-    int pressCounter;
-    
-    system_mutex_t lock_mutex;
-    
-    BOOL swUpPressed;
-    BOOL swDownPressed;
-            
-} SWITCH_CONTROL_DATA;
-
-
-// *****************************************************************************
-// *****************************************************************************
-// Section: Application Callback Routines
-// *****************************************************************************
-// *****************************************************************************
-/* These routines are called by drivers when certain events occur.
-*/
-	
-// *****************************************************************************
-// *****************************************************************************
-// Section: Application Initialization and State Machine Functions
-// *****************************************************************************
-// *****************************************************************************
-
-/*******************************************************************************
-  Function:
-    void SWITCH_CONTROL_Initialize ( void )
-
-  Summary:
-     MPLAB Harmony application initialization routine.
-
-  Description:
-    This function initializes the Harmony application.  It places the 
-    application in its initial state and prepares it to run so that its 
-    APP_Tasks function can be called.
-
-  Precondition:
-    All other system initialization routines should be called before calling
-    this routine (in "SYS_Initialize").
-
-  Parameters:
-    None.
-
-  Returns:
-    None.
-
-  Example:
-    <code>
-    SWITCH_CONTROL_Initialize();
-    </code>
-
-  Remarks:
-    This routine must be called from the SYS_Initialize function.
-*/
-
-void SWITCH_CONTROL_Initialize ( void );
-
-
-/*******************************************************************************
-  Function:
-    void SWITCH_CONTROL_Tasks ( void )
-
-  Summary:
-    MPLAB Harmony Demo application tasks function
-
-  Description:
-    This routine is the Harmony Demo application's tasks function.  It
-    defines the application's state machine and core logic.
-
-  Precondition:
-    The system and application initialization ("SYS_Initialize") should be
-    called before calling this.
-
-  Parameters:
-    None.
-
-  Returns:
-    None.
-
-  Example:
-    <code>
-    SWITCH_CONTROL_Tasks();
-    </code>
-
-  Remarks:
-    This routine must be called from SYS_Tasks() routine.
- */
-
-void SWITCH_CONTROL_Tasks( void );
-
-
-#endif /* _SWITCH_CONTROL_H */
-
-//DOM-IGNORE-BEGIN
-#ifdef __cplusplus
-}
-#endif
-//DOM-IGNORE-END
-
-/*******************************************************************************
- End of File
- */
-
diff --git a/firmware/src/system_config/pic32mz_ec_sk/configuration.xml b/firmware/src/system_config/pic32mz_ec_sk/configuration.xml
index c3b7331..b1d7974 100644
--- a/firmware/src/system_config/pic32mz_ec_sk/configuration.xml
+++ b/firmware/src/system_config/pic32mz_ec_sk/configuration.xml
@@ -641,8 +641,8 @@
         <Path>Source Files/app</Path>
       </Template>
       <Template>
-        <Name>switch_control.h</Name>
-        <Path>Header Files/app</Path>
+        <Name>sensor.c</Name>
+        <Path>Source Files/app</Path>
       </Template>
       <Template>
         <Name>system_exceptions.c</Name>
@@ -660,6 +660,10 @@
         <Checksum>4C2C868738FD74E2D6A3C8A8FD6B1381</Checksum>
       </Template>
       <Template>
+        <Name>display_ctrl.h</Name>
+        <Path>Header Files/app</Path>
+      </Template>
+      <Template>
         <Name>system_interrupt_a.S</Name>
         <Path>Source Files/app/system_config/pic32mz_ec_sk</Path>
         <Checksum>9C593C9BCF29FEF1036B0517B48F4177</Checksum>
@@ -676,7 +680,7 @@
       <Template>
         <Name>system_config.h</Name>
         <Path>Header Files/app/system_config/pic32mz_ec_sk</Path>
-        <Checksum>1666396BE3D4D4BF561F0206D795BD37</Checksum>
+        <Checksum>890CD203F2AAE45689EE4CA5F1E28DEB</Checksum>
       </Template>
       <Template>
         <Name>net_pres_enc_glue.h</Name>
@@ -686,7 +690,7 @@
       <Template>
         <Name>system_interrupt.c</Name>
         <Path>Source Files/app/system_config/pic32mz_ec_sk</Path>
-        <Checksum>8BD0BE11D707BFC6003246F959B96913</Checksum>
+        <Checksum>58C277C93EBF8CBF6BE0E3A2690347AC</Checksum>
       </Template>
       <Template>
         <Name>sys_clk_static.h</Name>
@@ -701,18 +705,26 @@
       <Template>
         <Name>system_init.c</Name>
         <Path>Source Files/app/system_config/pic32mz_ec_sk</Path>
-        <Checksum>2219D49419121A93C74D80D7DFD6E3FF</Checksum>
+        <Checksum>71F06A4010207981CF16E99905B35B7E</Checksum>
+      </Template>
+      <Template>
+        <Name>sensor.h</Name>
+        <Path>Header Files/app</Path>
       </Template>
       <Template>
         <Name>system_definitions.h</Name>
         <Path>Header Files/app/system_config/pic32mz_ec_sk</Path>
-        <Checksum>E094EC174911D516AB49BB125563D05F</Checksum>
+        <Checksum>B0358CAD51B5321EEE3143AFB65EC6E9</Checksum>
       </Template>
       <Template>
         <Name>app.h</Name>
         <Path>Header Files/app</Path>
       </Template>
       <Template>
+        <Name>display_ctrl.c</Name>
+        <Path>Source Files/app</Path>
+      </Template>
+      <Template>
         <Name>FreeRTOSConfig.h</Name>
         <Path>Header Files/app/system_config/pic32mz_ec_sk</Path>
         <Checksum>CA9E65F2A9F61CDDCDEAEAC9A4B78C13</Checksum>
@@ -723,10 +735,6 @@
         <Checksum>F299EB5298C761844925061277D5E36E</Checksum>
       </Template>
       <Template>
-        <Name>switch_control.c</Name>
-        <Path>Source Files/app</Path>
-      </Template>
-      <Template>
         <Name>rtos_hooks.c</Name>
         <Path>Source Files/app/system_config/pic32mz_ec_sk</Path>
         <Checksum>FA52743264536E5207D2ADBE57B48D05</Checksum>
@@ -739,7 +747,7 @@
       <Template>
         <Name>system_tasks.c</Name>
         <Path>Source Files/app/system_config/pic32mz_ec_sk</Path>
-        <Checksum>BFE44265050D2D913E78D578F86DF1F6</Checksum>
+        <Checksum>2920589DEB3F3A1DAE405274466E6ECB</Checksum>
       </Template>
     </Templates>
     <CompilerItems>
diff --git a/firmware/src/system_config/pic32mz_ec_sk/pic32mz_ec_sk.mhc b/firmware/src/system_config/pic32mz_ec_sk/pic32mz_ec_sk.mhc
index 4d3edfc..d093284 100644
--- a/firmware/src/system_config/pic32mz_ec_sk/pic32mz_ec_sk.mhc
+++ b/firmware/src/system_config/pic32mz_ec_sk/pic32mz_ec_sk.mhc
@@ -8,7 +8,7 @@
 #
 # from $PROJECT_FIRMWARE_DIRECTORY/$PROJECT_NAME.hconfig
 #
-CONFIG_APP_INSTANCES=2
+CONFIG_APP_INSTANCES=3
 #
 # from $HARMONY_VERSION_PATH/utilities/mhc/config/app_name_idx_gencode.ftl
 #
@@ -20,12 +20,19 @@ CONFIG_APP_TASK_PRIORITY_IDX0=2
 CONFIG_APP_TASK_USE_DELAY_IDX0=y
 CONFIG_APP_TASK_DELAY_IDX0=1
 CONFIG_APP_MENU_IDX1=y
-CONFIG_APP_NAME_1="switch_control"
+CONFIG_APP_NAME_1="display_ctrl"
 CONFIG_APP_AUTO_GENERATE_CODE1=n
 CONFIG_APP_TASK_SIZE_IDX1=1024
 CONFIG_APP_TASK_PRIORITY_IDX1=1
 CONFIG_APP_TASK_USE_DELAY_IDX1=y
 CONFIG_APP_TASK_DELAY_IDX1=1
+CONFIG_APP_MENU_IDX2=y
+CONFIG_APP_NAME_2="sensor"
+CONFIG_APP_AUTO_GENERATE_CODE2=n
+CONFIG_APP_TASK_SIZE_IDX2=1024
+CONFIG_APP_TASK_PRIORITY_IDX2=1
+CONFIG_APP_TASK_USE_DELAY_IDX2=y
+CONFIG_APP_TASK_DELAY_IDX2=1
 #
 # from $PROJECT_FIRMWARE_DIRECTORY/$PROJECT_NAME.hconfig
 #
diff --git a/firmware/src/system_config/pic32mz_ec_sk/system_config.h b/firmware/src/system_config/pic32mz_ec_sk/system_config.h
index 1927b1e..51d4b22 100644
--- a/firmware/src/system_config/pic32mz_ec_sk/system_config.h
+++ b/firmware/src/system_config/pic32mz_ec_sk/system_config.h
@@ -594,6 +594,8 @@ extern "C" {
 
 /*** Application Instance 1 Configuration ***/
 
+/*** Application Instance 2 Configuration ***/
+
 //DOM-IGNORE-BEGIN
 #ifdef __cplusplus
 }
diff --git a/firmware/src/system_config/pic32mz_ec_sk/system_definitions.h b/firmware/src/system_config/pic32mz_ec_sk/system_definitions.h
index bd6cfec..b3ec386 100644
--- a/firmware/src/system_config/pic32mz_ec_sk/system_definitions.h
+++ b/firmware/src/system_config/pic32mz_ec_sk/system_definitions.h
@@ -78,7 +78,8 @@ SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
 #include "net/pres/net_pres_transportapi.h"
 #include "net/pres/net_pres_socketapi.h"
 #include "app.h"
-#include "switch_control.h"
+#include "display_ctrl.h"
+#include "sensor.h"
 
 
 // DOM-IGNORE-BEGIN
diff --git a/firmware/src/system_config/pic32mz_ec_sk/system_init.c b/firmware/src/system_config/pic32mz_ec_sk/system_init.c
index b4519f7..dfc4760 100644
--- a/firmware/src/system_config/pic32mz_ec_sk/system_init.c
+++ b/firmware/src/system_config/pic32mz_ec_sk/system_init.c
@@ -727,7 +727,8 @@ void SYS_Initialize ( void* data )
 
     /* Initialize the Application */
     APP_Initialize();
-    SWITCH_CONTROL_Initialize();
+    DISPLAY_CTRL_Initialize();
+    SENSOR_Initialize();
 }
 
 
diff --git a/firmware/src/system_config/pic32mz_ec_sk/system_interrupt.c b/firmware/src/system_config/pic32mz_ec_sk/system_interrupt.c
index fe29ade..5579860 100644
--- a/firmware/src/system_config/pic32mz_ec_sk/system_interrupt.c
+++ b/firmware/src/system_config/pic32mz_ec_sk/system_interrupt.c
@@ -62,7 +62,8 @@ SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
 #include <xc.h>
 #include <sys/attribs.h>
 #include "app.h"
-#include "switch_control.h"
+#include "display_ctrl.h"
+#include "sensor.h"
 #include "system_definitions.h"
 
 // *****************************************************************************
diff --git a/firmware/src/system_config/pic32mz_ec_sk/system_tasks.c b/firmware/src/system_config/pic32mz_ec_sk/system_tasks.c
index 11917d4..012faab 100644
--- a/firmware/src/system_config/pic32mz_ec_sk/system_tasks.c
+++ b/firmware/src/system_config/pic32mz_ec_sk/system_tasks.c
@@ -55,7 +55,8 @@ SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
 #include "system_config.h"
 #include "system_definitions.h"
 #include "app.h"
-#include "switch_control.h"
+#include "display_ctrl.h"
+#include "sensor.h"
 
 
 // *****************************************************************************
@@ -73,7 +74,8 @@ void _SYS_COMMAND_Tasks(void);
 
 void _TCPIP_Tasks(void);
 static void _APP_Tasks(void);
-static void _SWITCH_CONTROL_Tasks(void);
+static void _DISPLAY_CTRL_Tasks(void);
+static void _SENSOR_Tasks(void);
 
 
 // *****************************************************************************
@@ -121,9 +123,14 @@ void SYS_Tasks ( void )
                 "APP Tasks",
                 2048, NULL, 2, NULL);
 
-    /* Create OS Thread for SWITCH_CONTROL Tasks. */
-    xTaskCreate((TaskFunction_t) _SWITCH_CONTROL_Tasks,
-                "SWITCH_CONTROL Tasks",
+    /* Create OS Thread for DISPLAY_CTRL Tasks. */
+    xTaskCreate((TaskFunction_t) _DISPLAY_CTRL_Tasks,
+                "DISPLAY_CTRL Tasks",
+                1024, NULL, 1, NULL);
+
+    /* Create OS Thread for SENSOR Tasks. */
+    xTaskCreate((TaskFunction_t) _SENSOR_Tasks,
+                "SENSOR Tasks",
                 1024, NULL, 1, NULL);
 
     /**************
@@ -206,17 +213,35 @@ static void _APP_Tasks(void)
 
 /*******************************************************************************
   Function:
-    void _SWITCH_CONTROL_Tasks ( void )
+    void _DISPLAY_CTRL_Tasks ( void )
+
+  Summary:
+    Maintains state machine of DISPLAY_CTRL.
+*/
+
+static void _DISPLAY_CTRL_Tasks(void)
+{
+    while(1)
+    {
+        DISPLAY_CTRL_Tasks();
+        vTaskDelay(1 / portTICK_RATE_MS);
+    }
+}
+
+
+/*******************************************************************************
+  Function:
+    void _SENSOR_Tasks ( void )
 
   Summary:
-    Maintains state machine of SWITCH_CONTROL.
+    Maintains state machine of SENSOR.
 */
 
-static void _SWITCH_CONTROL_Tasks(void)
+static void _SENSOR_Tasks(void)
 {
     while(1)
     {
-        SWITCH_CONTROL_Tasks();
+        SENSOR_Tasks();
         vTaskDelay(1 / portTICK_RATE_MS);
     }
 }
